---create table library 

create table library(
	library_id  int primary key,
	library_name varchar(255) not null, 
	address varchar(255) not null
);

--- create table category 

create table category(
	category_id int primary key,
	category varchar(20)
);


--- create table book 

create table book(
	book_id varchar(20) primary key,
	category_id int, 
	judul varchar(255),
	penulis varchar(255),
	constraint fk_book
		foreign key (category_id) references category(category_id)
);

---create table book_library 

create table book_library(
	book_library_id  int primary key, 
	library_id  int not null,
	book_id varchar (20) not null,
	quantity int check(quantity >= 0),
	constraint fk_book_library_library
		foreign key (library_id) references library(library_id),
	constraint fk_book_library_book 
		foreign key (book_id) references book(book_id)
);

--- create table users 

create table users(
	users_id int primary key,
	name varchar(255) not null,
	email varchar(255) not null,
	password varchar(255) not null
);


---create table status_loan

create table status_loan (
	status_loan_id int primary key, 
	status  varchar(20) not null
);

--- create table loan 

create table loan(
	loan_id serial primary key,
	users_id int not null,
	library_id int not null,
	book_id varchar(20) not null, 
	loan_date date date default current_date,
	due_date date not null, 
	return_date date , 
	status_loan_id int not null,
	constraint fk_loan_user 
		foreign key (users_id) references users(users_id),
	constraint fk_loan_library
		foreign key (library_id) references library(library_id),
	constraint fk_loan_book
		foreign key (book_id) references book(book_id),
	constraint fk_loan_status_loan
		FOREIGN KEY (status_loan_id) references status_loan(status_loan_id)
);


---Create table status_hold 

create table status_hold(
	status_hold_id int primary key, 
	status varchar(20) not null
);


---Create table hold 


create table hold(
	hold_id int primary key,
	users_id int not null,
	library_id int not null, 
	book_id varchar(20) not null, 
	hold_date date default current_date,
	available_date date not null, 
	expired_date date not null,
	pickup_date date,
	status_hold_id int not null,
	constraint fk_hold_user 
		foreign key (users_id) references users(users_id),
	constraint fk_hold_library
		foreign key (library_id) references library(library_id),
	constraint fk_hold_book
		foreign key (book_id) references book(book_id),
	constraint fk_hold_status_hold
		FOREIGN KEY (status_hold_id) references status_hold(status_hold_id)
);




